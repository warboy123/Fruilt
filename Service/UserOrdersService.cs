// <autogenerated>
//   This file was generated by T4 code generator EntitisBuild.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using AutoMapper;
using AutoMapper.QueryableExtensions;
using IService;
using DTO;
using Entities;
using IDAL;
using Common;
namespace Service
{
	public class UserOrdersService: ServiceBase, IUserOrdersService
	{		
  
        private IBaseDao _dal;

        public UserOrdersService(IBaseDao dal)            
        {
            _dal = dal;
            

        }
        public UserOrdersDTO Add(UserOrdersDTO userorders)
        { 
           
            T_UserOrders FruitResult = _dal.Insert<T_UserOrders>(Mapper.Map<T_UserOrders>(userorders));            
            return Mapper.Map<UserOrdersDTO>(FruitResult);
        }
        public void Delete(int UserOrdersID)
        {
            _dal.Update<T_UserOrders>(new T_UserOrders { Enabled = false }, true);
        }
        public void Renew(UserOrdersDTO userorders)
        {
           
            _dal.Update<T_UserOrders>(Mapper.Map<T_UserOrders>(userorders),true);
        }
        public UserOrdersDTO Get(int UserOrdersID)
        {
           
            return Mapper.Map<UserOrdersDTO>(_dal.GetEntityByID<T_UserOrders>(UserOrdersID));
        }
        public IList<UserOrdersDTO> GetList()
        {
            
            return _dal.GetEntities<T_UserOrders>(m => 1 == 1, true).Select(CreateDataMapper.GetMappedSelector<T_UserOrders, UserOrdersDTO>()).ToList();  
        }
    }
}
