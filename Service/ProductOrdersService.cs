// <autogenerated>
//   This file was generated by T4 code generator EntitisBuild.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using AutoMapper;
using AutoMapper.QueryableExtensions;
using IService;
using DTO;
using Entities;
using IDAL;
using Common;
namespace Service
{
	public class ProductOrdersService: ServiceBase, IProductOrdersService
	{		
  
        private IBaseDao _dal;

        public ProductOrdersService(IBaseDao dal)            
        {
            _dal = dal;
            

        }
        public ProductOrdersDTO Add(ProductOrdersDTO productorders)
        { 
           
            T_ProductOrders FruitResult = _dal.Insert<T_ProductOrders>(Mapper.Map<T_ProductOrders>(productorders));            
            return Mapper.Map<ProductOrdersDTO>(FruitResult);
        }
        public void Delete(int ProductOrdersID)
        {
            _dal.Delete<T_ProductOrders>(new T_ProductOrders { ProductOrdersID = ProductOrdersID }, true);
        }
        public void Renew(ProductOrdersDTO productorders)
        {
           
            _dal.Update<T_ProductOrders>(Mapper.Map<T_ProductOrders>(productorders),true);
        }
        public ProductOrdersDTO Get(int ProductOrdersID)
        {
           
            return Mapper.Map<ProductOrdersDTO>(_dal.GetEntityByID<T_ProductOrders>(ProductOrdersID));
        }
        public IList<ProductOrdersDTO> GetList()
        {
            
            return _dal.GetEntities<T_ProductOrders>(m => 1 == 1, true).Select(CreateDataMapper.GetMappedSelector<T_ProductOrders, ProductOrdersDTO>()).ToList();  
        }
    }
}
