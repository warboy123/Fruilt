// <autogenerated>
//   This file was generated by T4 code generator EntitisBuild.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using AutoMapper;
using AutoMapper.QueryableExtensions;
using IService;
using DTO;
using Entities;
using IDAL;
using Common;
namespace Service
{
	public class SupplierService: ServiceBase, ISupplierService
	{		
  
        private IBaseDao _dal;

        public SupplierService(IBaseDao dal)            
        {
            _dal = dal;
            

        }
        public SupplierDTO Add(SupplierDTO supplier)
        { 
           
            T_Supplier FruitResult = _dal.Insert<T_Supplier>(Mapper.Map<T_Supplier>(supplier));            
            return Mapper.Map<SupplierDTO>(FruitResult);
        }
        public void Delete(int SupplierID)
        {
            _dal.Update<T_Supplier>(new T_Supplier { Enabled = false }, true);
        }
        public void Renew(SupplierDTO supplier)
        {
           
            _dal.Update<T_Supplier>(Mapper.Map<T_Supplier>(supplier),true);
        }
        public SupplierDTO Get(int SupplierID)
        {
           
            return Mapper.Map<SupplierDTO>(_dal.GetEntityByID<T_Supplier>(SupplierID));
        }
        public IList<SupplierDTO> GetList()
        {
            
            return _dal.GetEntities<T_Supplier>(m => 1 == 1, true).Select(CreateDataMapper.GetMappedSelector<T_Supplier, SupplierDTO>()).ToList();  
        }
    }
}
