// <autogenerated>
//   This file was generated by T4 code generator EntitisBuild.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using AutoMapper;
using AutoMapper.QueryableExtensions;
using IService;
using DTO;
using Entities;
using IDAL;
using Common;
namespace Service
{
	public class ProductPicService: ServiceBase, IProductPicService
	{		
  
        private IBaseDao _dal;

        public ProductPicService(IBaseDao dal)            
        {
            _dal = dal;
            

        }
        public ProductPicDTO Add(ProductPicDTO productpic)
        { 
           
            T_ProductPic FruitResult = _dal.Insert<T_ProductPic>(Mapper.Map<T_ProductPic>(productpic));            
            return Mapper.Map<ProductPicDTO>(FruitResult);
        }
        public void Delete(int ProductPicID)
        {
            _dal.Delete<T_ProductPic>(new T_ProductPic { ProductPicID = ProductPicID }, true);
        }
        public void Renew(ProductPicDTO productpic)
        {
           
            _dal.Update<T_ProductPic>(Mapper.Map<T_ProductPic>(productpic),true);
        }
        public ProductPicDTO Get(int ProductPicID)
        {
           
            return Mapper.Map<ProductPicDTO>(_dal.GetEntityByID<T_ProductPic>(ProductPicID));
        }
        public IList<ProductPicDTO> GetList()
        {
            
            return _dal.GetEntities<T_ProductPic>(m => 1 == 1, true).Select(CreateDataMapper.GetMappedSelector<T_ProductPic, ProductPicDTO>()).ToList();  
        }
    }
}
