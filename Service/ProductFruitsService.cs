// <autogenerated>
//   This file was generated by T4 code generator EntitisBuild.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using AutoMapper;
using AutoMapper.QueryableExtensions;
using IService;
using DTO;
using Entities;
using IDAL;
using Common;
namespace Service
{
	public class ProductFruitsService: ServiceBase, IProductFruitsService
	{		
  
        private IBaseDao _dal;

        public ProductFruitsService(IBaseDao dal)            
        {
            _dal = dal;
            

        }
        public ProductFruitsDTO Add(ProductFruitsDTO productfruits)
        { 
           
            C_ProductFruits FruitResult = _dal.Insert<C_ProductFruits>(Mapper.Map<C_ProductFruits>(productfruits));            
            return Mapper.Map<ProductFruitsDTO>(FruitResult);
        }
        public void Delete(int ProductFruitsID)
        {
            _dal.Delete<C_ProductFruits>(new C_ProductFruits { ProductFruitsID = ProductFruitsID }, true);
        }
        public void Renew(ProductFruitsDTO productfruits)
        {
           
            _dal.Update<C_ProductFruits>(Mapper.Map<C_ProductFruits>(productfruits),true);
        }
        public ProductFruitsDTO Get(int ProductFruitsID)
        {
           
            return Mapper.Map<ProductFruitsDTO>(_dal.GetEntityByID<C_ProductFruits>(ProductFruitsID));
        }
        public IList<ProductFruitsDTO> GetList()
        {
            
            return _dal.GetEntities<C_ProductFruits>(m => 1 == 1, true).Select(CreateDataMapper.GetMappedSelector<C_ProductFruits, ProductFruitsDTO>()).ToList();  
        }
    }
}
